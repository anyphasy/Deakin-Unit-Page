pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Use Maven to build the code
                echo 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit
                echo 'mvn test'
                // Run integration tests using Postman/Newman
                echo 'newman run your_integration_tests.json'
            }
            
    post {
        success {
            // Send a success email notification
            emailext  to: 'liuyefeng2@gmail.com',
                subject: 'Pipeline Successful',
                body: 'The pipeline has completed successfully.',
                attachLog: true
            
        }
        failure {
            // Send a failure email notification
            emailext to: 'liuyefeng2@gmail.com',
                subject: 'Pipeline Failed',
                body: 'The pipeline has failed. Please check the logs for details.',
                attachLog: true
            
        }
    }
        }

        stage('Code Analysis') {
            steps {
                // Execute code analysis using SonarQube
                echo 'sonar-scanner'
            }
        }

        stage('Security Scan') {
            steps {
                // Perform a security scan using OWASP ZAP
                echo 'zap-cli --spider your_app_url'
                echo 'zap-cli --scan your_app_url'
            }
        }

        stage('Deploy to Staging') {
            steps {
                // Use Ansible to deploy to staging server
               echo 'ansible-playbook deploy_staging.yml'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                echo 'selenium-scripts-for-testing'
            }
        }

        stage('Deploy to Production') {
            steps {
                // Use Ansible to deploy to production server
                echo 'ansible-playbook deploy_production.yml'
            }
        } 
    stage('complete') {
            steps {
                // Run integration tests on the staging environment
                echo 'completed'
            }
        }
     
    }

}
